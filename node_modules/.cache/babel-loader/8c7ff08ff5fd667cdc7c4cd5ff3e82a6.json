{"ast":null,"code":"import _classCallCheck from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/demo-old/src/components/CreatePost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\nimport { Field, reduxForm } from 'redux-form';\nimport history from './history';\nimport { Link } from 'react-router-dom';\nimport DropdownList from 'react-widgets/lib/DropdownList';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValue) {\n      _this.props.createPost(formValue, function (res) {\n        console.log(res, 'function');\n\n        if (!res.status === 200) {\n          history.push('/');\n        }\n\n        if (res.status === 201) {\n          history.push('/PostList');\n        }\n      });\n    };\n\n    _this.renderDropdownList = function (_ref) {\n      var input = _ref.input,\n          data = _ref.data,\n          valueField = _ref.valueField,\n          textField = _ref.textField;\n      return React.createElement(DropdownList, Object.assign({}, input, {\n        data: data,\n        valueField: valueField,\n        textField: textField,\n        onChange: input.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderField = function (formValue) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: formValue.type\n      }, formValue.input, {\n        className: \"form-control is-danger\",\n        placeholder: formValue.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"font\", {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, formValue.meta.touched ? formValue.meta.error : ''));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"onSubmitLogout\",\n    value: function onSubmitLogout() {\n      localStorage.removeItem(\"user_id\");\n      localStorage.removeItem(\"token\");\n      history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onSubmitHelper = this.onSubmit;\n\n      if (this.props.onSubmit) {\n        onSubmitHelper = this.props.onSubmit;\n      }\n\n      if (localStorage.getItem('token')) {\n        return React.createElement(\"form\", {\n          onSubmit: this.props.handleSubmit(onSubmitHelper),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Create Post\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"title\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"title\",\n          component: this.renderField,\n          type: \"text\",\n          placeholder: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"description\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"content\",\n          component: this.renderField,\n          type: \"text\",\n          placeholder: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"status\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"status\",\n          component: this.renderField,\n          type: \"text\",\n          placeholder: \"Publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Submit\"), React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          onClick: this.onSubmitLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Logout\"))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(formValue) {\n  var errors = {};\n\n  if (!formValue.title) {\n    errors.title = 'you must enter a title';\n  } else if (formValue.title.length > 15) {\n    errors.title = \"you must enter less than 15 letters\";\n  }\n\n  if (!formValue.content) {\n    errors.content = 'you must enter a description';\n  } else if (formValue.content.length > 200) {\n    errors.content = \"you must enter less than 200 letters\";\n  }\n\n  if (!formValue.status) {\n    errors.status = 'you must enter a status';\n  }\n\n  return errors;\n};\n\nexport default connect(null, {\n  createPost: createPost\n})(reduxForm({\n  form: 'CreatePost',\n  validate: validate\n})(CreatePost));","map":{"version":3,"sources":["/home/harshita/demo-old/src/components/CreatePost.js"],"names":["React","connect","createPost","Field","reduxForm","history","Link","DropdownList","CreatePost","onSubmit","formValue","props","res","console","log","status","push","renderDropdownList","input","data","valueField","textField","onChange","renderField","type","placeholder","meta","touched","error","localStorage","removeItem","onSubmitHelper","getItem","handleSubmit","onSubmitLogout","Component","validate","errors","title","length","content","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\nimport {Field,reduxForm} from 'redux-form';\nimport history from './history';\nimport {Link} from 'react-router-dom';\nimport DropdownList from 'react-widgets/lib/DropdownList'\n\n\nclass CreatePost extends React.Component  {\n     \n      onSubmit=(formValue)=>{\n       \n        this.props.createPost(formValue,(res)=>{\n            console.log(res,'function')\n        if(!res.status===200){\n            history.push('/')\n        }\n        if(res.status===201){\n            history.push('/PostList');\n            }          \n        }); \n  }\n\n  onSubmitLogout(){\n    localStorage.removeItem(\"user_id\");\n    localStorage.removeItem(\"token\");\n    history.push('/');\n }\n\n\n renderDropdownList = ({ input, data, valueField, textField }) =>\n        <DropdownList {...input}\n        data={data}\n        valueField={valueField}\n        textField={textField}\n        onChange={input.onChange} />\n\n\n    renderField = (formValue) => {\n        return (\n        <div>\n            <input type={formValue.type}\n            {...formValue.input} \n            className='form-control is-danger' \n            placeholder={formValue.placeholder} />\n           <font color='red'>{formValue.meta.touched ? formValue.meta.error : ''}</font>\n        </div>\n        )\n        }\n\n    render(){\n        let onSubmitHelper=this.onSubmit;\n       if(this.props.onSubmit){\n            onSubmitHelper=this.props.onSubmit\n       }\n       if(localStorage.getItem('token')){\n        return (\n          \n            <form onSubmit= {this.props.handleSubmit(onSubmitHelper)}>\n                  <h3>Create Post</h3>\n                  <div>\n                      <label>title</label>\n                      <div>\n                      <Field\n                          name=\"title\"\n                          component={this.renderField}\n                          type=\"text\"\n                          placeholder=\"title\"                    \n                      />\n                      </div>\n                  </div>\n                  <div>\n                      <label>description</label>\n                      <div>\n                      <Field\n                          name=\"content\"\n                          component={this.renderField}\n                          type=\"text\"\n                          placeholder=\"description\"                    \n                      />\n                      </div>\n                  </div>\n                  <div>\n                      <label>status</label>\n                      <div>\n                      <Field\n                          name=\"status\"\n                          component={this.renderField}\n                          type=\"text\"\n                          placeholder=\"Publish\"                    \n                      />\n                      </div>\n                  </div>\n                  <div>\n                      <button type='submit'  className=\"ui button primary\">Submit</button>\n                       <Link to='/'><button  className=\"ui button primary\" onClick={this.onSubmitLogout}>Logout</button></Link>\n                     \n                  </div>\n            </form>      \n        );\n       }\n       else{\n           return(\n               <div>{history.push('/')}</div>\n           )\n      }\n        \n   }\n  }\n  const validate = (formValue) => {\n    const errors={};\n    if(!formValue.title) {\n        errors.title='you must enter a title';\n    }else if(formValue.title.length > 15){\n        errors.title=\"you must enter less than 15 letters\"\n    }\n\n    if(!formValue.content){\n        errors.content='you must enter a description';\n    }else if(formValue.content.length > 200){\n        errors.content=\"you must enter less than 200 letters\"\n    }\n\n    if(!formValue.status){\n        errors.status='you must enter a status';\n    }\n    return errors;\n  }\n  \n\nexport default connect(null , {createPost})((reduxForm({\n    form : 'CreatePost',\n    validate\n\n}))(CreatePost));\n"]},"metadata":{},"sourceType":"module"}