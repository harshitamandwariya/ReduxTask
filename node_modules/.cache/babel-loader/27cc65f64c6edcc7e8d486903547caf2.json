{"ast":null,"code":"import _classCallCheck from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/ReactTask/ReduxTask/src/components/PostList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { postList } from '../actions';\nimport { Link } from 'react-router-dom';\nimport renderHTML from 'react-render-html';\nimport history from './history';\nimport { toastr } from 'react-redux-toastr';\n\nvar PostList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostList, _React$Component);\n\n  function PostList(props) {\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostList).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.postList(function (res) {\n        _this.setState({\n          postdata: res.data\n        });\n      });\n    };\n\n    _this.componentDidUpdate = function () {\n      _this.props.postList(function (res) {\n        _this.setState({\n          postdata: res.data\n        });\n      });\n    };\n\n    _this.state = {\n      postdata: []\n    };\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      localStorage.removeItem(\"user_id\");\n      localStorage.removeItem(\"token\");\n      toastr.success('successfully logged out');\n      history.push('/');\n    }\n  }, {\n    key: \"showName\",\n    value: function showName() {\n      var username = localStorage.getItem(\"user_display_name\");\n      console.log(username, 'name');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"welcome,\", username);\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(post) {\n      localStorage.getItem(\"data\")(localStorage.getItem(\"user_display_name\"));\n\n      if (localStorage.getItem(\"user_id\") === post.author.toString()) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/EditPost/\".concat(post.id),\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Link, {\n          to: \"/DeletePost/\".concat(post.id),\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this2 = this;\n\n      return this.state.postdata.map(function (post) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, _this2.renderAdmin(post), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\".concat(post.id),\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, post.title.rendered, \" \"), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, renderHTML(post.excerpt.rendered))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (localStorage.getItem(\"token\")) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Posts\"), this.showName, React.createElement(\"div\", {\n          className: \"ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/CreatePost\",\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" Create new Post\"), React.createElement(Link, {\n          to: \"/\",\n          className: \"ui button negative\",\n          onClick: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Logout\")), React.createElement(\"div\", {\n          className: \"ui celled list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, this.renderList()));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }]);\n\n  return PostList;\n}(React.Component);\n\nexport default connect(null, {\n  postList: postList\n})(PostList);","map":{"version":3,"sources":["/home/harshita/ReactTask/ReduxTask/src/components/PostList.js"],"names":["React","connect","postList","Link","renderHTML","history","toastr","PostList","props","componentDidMount","res","setState","postdata","data","componentDidUpdate","state","localStorage","removeItem","success","push","username","getItem","console","log","post","author","toString","id","map","renderAdmin","title","rendered","excerpt","showName","onSubmit","renderList","Component"],"mappings":"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","sourcesContent":["import React from 'react' ;\nimport { connect } from 'react-redux' ;\nimport { postList } from '../actions' ;\nimport {Link} from 'react-router-dom';\nimport renderHTML from 'react-render-html';\nimport history from './history';\nimport {toastr} from 'react-redux-toastr'\n\nclass PostList extends React.Component {\nconstructor(props){\n    super(props)\n    this.state = {\n        postdata : []\n    }\n}\n    componentDidMount = () => {\n      this.props.postList((res) => {          \n       this.setState({\n           postdata : res.data\n       })\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.props.postList((res) => {          \n        this.setState({\n            postdata : res.data\n        })\n    })\n  }\n\n  onSubmit(){\n    localStorage.removeItem(\"user_id\");\n    localStorage.removeItem(\"token\");\n    toastr.success('successfully logged out')\n    history.push('/');\n }\n\n    showName(){\n       var username = (localStorage.getItem(\"user_display_name\"));  \n       console.log(username,'name');\n       \n            return(\n                <div>\n                    welcome,{username}\n                </div>\n            )\n    }\n\n\n  renderAdmin(post) {\n      localStorage.getItem(\"data\")\n      (localStorage.getItem(\"user_display_name\"));   \n         if(localStorage.getItem(\"user_id\") === post.author.toString()){\n            return(\n              \n                 <div className=\"right floated content\">\n                    <Link to={`/EditPost/${post.id}`}  className=\"ui button primary\">Edit</Link>\n                    <Link to={`/DeletePost/${post.id}`} className=\"ui button negative\">Delete</Link>\n                 </div>\n        );    \n    }\n}\n\n  renderList() {\n    return this.state.postdata.map(post => {  \n        return (\n            <div className='item' key={post.id}>\n                {this.renderAdmin(post)}\n                <i className=\"large middle aligned icon camera\" />\n                <div className = 'content'>\n                    <Link to={`/${post.id}`} className=\"header\">{post.title.rendered} </Link>\n                    <div className=\"description\">{renderHTML(post.excerpt.rendered)}</div>\n                </div>              \n            </div>\n        );\n    });\n}\n\n\n\n    render() {\n        if(localStorage.getItem(\"token\")){\n            return (\n                <div> \n                    <h2>Posts</h2>\n                    {this.showName}\n                    <div className=\"ui secondary pointing menu\">\n                        <Link to='/CreatePost' className=\"ui button primary\"> Create new Post</Link>\n                        <Link to='/' className=\"ui button negative\"onClick={this.onSubmit}>Logout</Link>\n                                            </div>\n                    <div className='ui celled list'>{this.renderList()}</div>\n                </div>\n                );\n        }else {\n                return(\n                         <div>{history.push('/')}</div>\n                      )\n        }\n            \n    }\n}\n\nexport default connect (null ,{postList})(PostList);"]},"metadata":{},"sourceType":"module"}