{"ast":null,"code":"import api from '../api/Post';\nimport { toastr } from 'react-redux-toastr';\nexport var createUser = function createUser(values, callback) {\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n  var response = api.post('/wp/v2/users/register', values, {\n    headers: headers\n  });\n  response.then(function (res) {\n    callback(res);\n    toastr.success('successfully signup');\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  return {\n    type: 'CREATE_USER',\n    payload: response\n  };\n};\nexport var loginUser = function loginUser(values, callback) {\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n  var response = api.post('/jwt-auth/v1/token', values, {\n    headers: headers\n  });\n  response.then(function (res) {\n    callback(res);\n    console.log(res, 'hfsd');\n    toastr.success('successfully login');\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  return {\n    type: 'LOGIN_USER',\n    payload: response\n  };\n};\nexport var postList = function postList(callback) {\n  var response = api.get('/wp/v2/posts/');\n  response.then(function (res) {\n    callback(res);\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  return {\n    type: 'POST_LIST',\n    payload: response\n  };\n};\nexport var getSinglepost = function getSinglepost(id, callback) {\n  var response = api.get(\"/wp/v2/posts/\".concat(id));\n  response.then(function (res) {\n    // console.log('res==', res.data);\n    callback(res);\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  re;\n  return {\n    type: 'SINGLE_POST',\n    payload: response\n  };\n};\nexport var createPost = function createPost(values, callback) {\n  return function () {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n    };\n    var response = api.post('/wp/v2/posts/', values, {\n      headers: headers\n    });\n    response.then(function (res) {\n      callback(res);\n      toastr.success('you created a new post');\n    });\n    response.catch(function (error) {\n      callback(error.response);\n      toastr.error('invalid user');\n    });\n    return {\n      type: 'CREATE_POST',\n      payload: response\n    };\n  };\n};\nexport var editPost = function editPost(id, values) {\n  var headers = {\n    'Content-Type': 'application/json',\n    'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n  };\n  var response = api.put(\"/wp/v2/posts/\".concat(id), values, {\n    headers: headers\n  });\n  response.then(function (res) {\n    toastr.success('you Edited a post');\n    return res;\n  });\n  response.catch(function (error) {\n    toastr.warning('something went wrong');\n  });\n  return {\n    type: 'EDIT_POST',\n    payload: response\n  };\n};\nexport var deletePost = function deletePost(id, callback) {\n  return function () {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n    };\n    var response = api.delete(\"/wp/v2/posts/\".concat(id), {\n      headers: headers\n    });\n    response.then(function (res) {\n      callback(res);\n      toastr.success('you deleted a post');\n    });\n    response.catch(function (error) {\n      toastr.error('can\\'t delete post');\n    });\n  };\n};","map":{"version":3,"sources":["/home/harshita/ReactTask/ReduxTask/src/actions/index.js"],"names":["api","toastr","createUser","values","callback","headers","response","post","then","res","success","catch","error","type","payload","loginUser","console","log","postList","get","getSinglepost","id","re","createPost","localStorage","getItem","editPost","put","warning","deletePost","delete"],"mappings":"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","sourcesContent":["import api from '../api/Post';\nimport {toastr} from 'react-redux-toastr'\n\n\nexport const createUser =(values , callback) => { \n   const headers = {\n                 'Content-Type': 'application/json',\n                   }\n                \n   const response = api.post('/wp/v2/users/register',values,{headers:headers});\n          response.then((res)=>{\n          callback(res);\n       \n          toastr.success( 'successfully signup')\n      }) \n        response.catch((error)=>{\n        toastr.error('invalid user');\n     })\n        return{\n        type: 'CREATE_USER',\n        payload: response\n    };\n  }  \n\n\n\n  export const loginUser =(values , callback) => { \n    const headers = {\n                  'Content-Type': 'application/json',\n                 }               \n    const response = api.post('/jwt-auth/v1/token',values,{headers:headers});\n        response.then((res)=>{\n        callback(res);\n        console.log(res,'hfsd');\n          \n        toastr.success('successfully login')\n    }) \n        response.catch((error)=>{  \n        toastr.error('invalid user');\n    })\n    \n       return{\n         type: 'LOGIN_USER',\n         payload: response\n     };\n   }  \n\n\n  export const postList =(callback) => {                               \n      const response = api.get('/wp/v2/posts/');\n      response.then((res)=>{\n      callback(res);\n    }) ;\n      response.catch((error)=>{\n      toastr.error('invalid user');\n    })\n      return {\n         type: 'POST_LIST',\n         payload: response\n     };\n  }  \n\n  export const getSinglepost=(id, callback) => {                               \n    const response = api.get(`/wp/v2/posts/${id}`);\n    response.then((res)=>{\n      // console.log('res==', res.data);\n    callback(res);\n  }) ;\n    response.catch((error)=>{\n    toastr.error('invalid user');\n  })\n  re\n    return {\n       type: 'SINGLE_POST',\n       payload: response\n   };\n}  \n\n\n\n   export const createPost =(values,callback) =>()=> { \n      const headers = {\n                    'Content-Type': 'application/json',\n                    'Authorization' : `Bearer ${localStorage.getItem(\"token\")}`\n                    }\n   const response = api.post('/wp/v2/posts/',values,{headers:headers});\n  \n    response.then((res)=>{\n        callback(res);\n        toastr.success('you created a new post')\n    }) \n      response.catch((error)=>{\n      callback(error.response);\n      toastr.error('invalid user');\n  })\n       return{\n         type: 'CREATE_POST',\n         payload: response\n     };\n   }  \n \n\n\n   export const editPost =(id,values) => { \n      const headers = {\n                    'Content-Type': 'application/json',\n                    'Authorization' : `Bearer ${localStorage.getItem(\"token\")}`\n                    }                 \n      const response = api.put(`/wp/v2/posts/${id}`,values,{headers:headers});\n          response.then((res)=>{\n            toastr.success('you Edited a post')\n            return res;\n          }) \n          response.catch((error)=>{\n          toastr.warning('something went wrong');\n      })\n       return{\n         type: 'EDIT_POST',\n         payload: response\n     };\n   }  \n \n \n\n  export const deletePost =(id,callback) =>()=> { \n      const headers = {\n                        'Content-Type': 'application/json',\n                        'Authorization' :`Bearer ${localStorage.getItem(\"token\")}`\n                      }\n                                 \n      const response = api.delete(`/wp/v2/posts/${id}`,{headers:headers});   \n        response.then((res)=>{\n            callback(res);\n            toastr.success('you deleted a post')\n       }) ;\n        response.catch((error)=>{\n        toastr.error('can\\'t delete post');\n      });\n   }  \n \n "]},"metadata":{},"sourceType":"module"}