{"ast":null,"code":"import _classCallCheck from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/ReactTask/ReduxTask/src/components/CreatePost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\nimport { Field, reduxForm } from 'redux-form';\nimport history from './history';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValue) {\n      _this.props.createPost(formValue, function (res) {\n        console.log(res, 'function');\n\n        if (!res.status === 200) {\n          history.push('/');\n        }\n\n        if (res.status === 201) {\n          history.push('/PostList');\n        }\n      });\n    };\n\n    _this.renderField = function (formValue) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: formValue.type\n      }, formValue.input, {\n        className: \"form-control is-danger\",\n        placeholder: formValue.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"font\", {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, formValue.meta.touched ? formValue.meta.error : ''));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"onSubmitLogout\",\n    value: function onSubmitLogout() {\n      localStorage.removeItem(\"user_id\");\n      localStorage.removeItem(\"token\");\n      history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onSubmitHelper = this.onSubmit;\n\n      if (this.props.onSubmit) {\n        onSubmitHelper = this.props.onSubmit;\n      }\n\n      if (localStorage.getItem('token')) {\n        return React.createElement(\"form\", {\n          className: \"ui form\",\n          onSubmit: this.props.handleSubmit(onSubmitHelper),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Create Post\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"title\",\n          component: this.renderField,\n          type: \"text\",\n          placeholder: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Description\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"content\",\n          component: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          })),\n          placeholder: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Select Status\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"status\",\n          component: \"select\",\n          type: \"text\",\n          placeholder: \"Publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          className: \"form-control is-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(\"option\", {\n          value: \"publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"publish\"), React.createElement(\"option\", {\n          value: \"future\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"future\"), React.createElement(\"option\", {\n          value: \"draft\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"draft\"), React.createElement(\"option\", {\n          value: \"private\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"private\"), React.createElement(\"option\", {\n          value: \"pending\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"pending\")))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Submit\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(formValue) {\n  var errors = {};\n\n  if (!formValue.title) {\n    errors.title = 'you must enter a title';\n  } else if (formValue.title.length > 15) {\n    errors.title = \"you must enter less than 15 letters\";\n  }\n\n  if (!formValue.content) {\n    errors.content = 'you must enter a description';\n  } else if (formValue.content.length > 200) {\n    errors.content = \"you must enter less than 200 letters\";\n  }\n\n  if (!formValue.status) {\n    errors.status = 'select any one choice';\n  }\n\n  return errors;\n};\n\nexport default connect(null, {\n  createPost: createPost\n})(reduxForm({\n  form: 'CreatePost',\n  validate: validate\n})(CreatePost));","map":{"version":3,"sources":["/home/harshita/ReactTask/ReduxTask/src/components/CreatePost.js"],"names":["React","connect","createPost","Field","reduxForm","history","CreatePost","onSubmit","formValue","props","res","console","log","status","push","renderField","type","input","placeholder","meta","touched","error","localStorage","removeItem","onSubmitHelper","getItem","handleSubmit","Component","validate","errors","title","length","content","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\nimport {Field,reduxForm} from 'redux-form';\nimport history from './history';\n\n\n\nclass CreatePost extends React.Component  {\n     \n      onSubmit=(formValue)=>{\n       \n        this.props.createPost(formValue,(res)=>{\n            console.log(res,'function')\n        if(!res.status===200){\n            history.push('/')\n        }\n        if(res.status===201){\n            history.push('/PostList');\n            }          \n        }); \n  }\n\n  onSubmitLogout(){\n    localStorage.removeItem(\"user_id\");\n    localStorage.removeItem(\"token\");\n    history.push('/');\n }\n\n\n    renderField = (formValue) => {\n        return (\n        <div>\n            <input type={formValue.type}\n            {...formValue.input} \n            className='form-control is-danger' \n            placeholder={formValue.placeholder} />\n           <font color='red'>{formValue.meta.touched ? formValue.meta.error : ''}</font>\n        </div>\n        )\n        }\n\n    render(){\n        let onSubmitHelper=this.onSubmit;\n       if(this.props.onSubmit){\n            onSubmitHelper=this.props.onSubmit\n       }\n\n       if(localStorage.getItem('token')){\n        return (\n          \n            <form className='ui form' onSubmit= {this.props.handleSubmit(onSubmitHelper)}>\n                  <h3>Create Post</h3>\n                  <div>\n                      <label>Title</label>\n                      <div>\n                      <Field\n                          name=\"title\"\n                          component={this.renderField}\n                          type=\"text\"\n                          placeholder=\"title\"                    \n                      />\n                      </div>\n                  </div>\n                  <div>\n                      <label>Description</label>\n                      <div>\n                      <Field\n                          name=\"content\"\n                          component=<div><textarea rows=\"4\" cols=\"50\"></textarea></div>\n                          placeholder=\"description\"                    \n                      />\n                      </div>\n                  </div>\n                  <div>\n                      <label>Select Status</label>\n                      <div>\n                      <Field\n                          name=\"status\"\n                          component=\"select\"\n                          type=\"text\"\n                          placeholder=\"Publish\"  >\n                          <option className='form-control is-danger'/>\n                          <option value=\"publish\">publish</option>\n                          <option value=\"future\">future</option>\n                          <option value=\"draft\">draft</option>     \n                          <option value=\"private\">private</option> \n                          <option value=\"pending\">pending</option>              \n                      </Field>\n                      </div>\n                  </div>\n                  <div>\n                      <button type='submit'  className=\"ui button primary\">Submit</button>\n                       {/* <Link to='/'><button  className=\"ui button primary\" onClick={this.onSubmitLogout}>Logout</button></Link> */}\n                     \n                  </div>\n            </form>      \n        );\n       } else {\n            return(\n                 <div>{history.push('/')}</div>\n                 )\n          }\n     }\n  }\n  const validate = (formValue) => {\n    const errors={};\n    if(!formValue.title) {\n        errors.title='you must enter a title';\n    }else if(formValue.title.length > 15){\n        errors.title=\"you must enter less than 15 letters\"\n    }\n\n    if(!formValue.content){\n        errors.content='you must enter a description';\n    }else if(formValue.content.length > 200){\n        errors.content=\"you must enter less than 200 letters\"\n    }    if(!formValue.status){\n        errors.status='select any one choice';\n    }\n    return errors;\n  }\n  \n\nexport default connect(null , {createPost})((reduxForm({\n    form : 'CreatePost',\n    validate\n\n}))(CreatePost));\n"]},"metadata":{},"sourceType":"module"}