{"ast":null,"code":"import _classCallCheck from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/ReactTask/ReduxTask/src/components/EditPost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { postList, editPost, getSinglepost } from '../actions';\nimport CreatePost from './CreatePost';\n\nvar EditPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPost, _React$Component);\n\n  function EditPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValue) {\n      _this.props.editPost(_this.props.match.params.id, formValue);\n\n      console.log('formVaalues', formValue);\n\n      _this.props.history.push('/PostList');\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPost, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getSinglepost(this.props.match.params.id, function (res) {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n\n      if (this.props.post) {\n        if (this.props.post.content) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, \"Edit a Post\"), React.createElement(CreatePost, {\n            initialValues: {\n              title: post.title.rendered,\n              content: post.content.rendered,\n              status: post.status\n            },\n            onSubmit: this.onSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"Loading...\"));\n        }\n      }\n    }\n  }]);\n\n  return EditPost;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.FetchUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postList: postList,\n  editPost: editPost,\n  getSinglepost: getSinglepost\n})(EditPost);","map":{"version":3,"sources":["/home/harshita/ReactTask/ReduxTask/src/components/EditPost.js"],"names":["React","connect","postList","editPost","getSinglepost","CreatePost","EditPost","onSubmit","formValue","props","match","params","id","console","log","history","push","res","post","content","title","rendered","status","Component","mapStateToProps","state","FetchUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,YAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAMFC,Q,GAAW,UAACC,SAAD,EAAe;AACtB,YAAKC,KAAL,CAAWN,QAAX,CAAoB,MAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAA+CJ,SAA/C;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,SAA3B;;AACA,YAAKC,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACN,K;;;;;;;yCARuB;AACjB,WAAKP,KAAL,CAAWL,aAAX,CAAyB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjD,EAAqD,UAACK,GAAD,EAAO,CAAE,CAA9D;AACH;;;6BAQI;AAAA,UAAWC,IAAX,GAAmB,KAAKT,KAAxB,CAAWS,IAAX;;AACT,UAAG,KAAKT,KAAL,CAAWS,IAAd,EAAmB;AACf,YAAG,KAAKT,KAAL,CAAWS,IAAX,CAAgBC,OAAnB,EAA2B;AACvB,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,UAAD;AACJ,YAAA,aAAa,EAAE;AACXC,cAAAA,KAAK,EAACF,IAAI,CAACE,KAAL,CAAWC,QADN;AAEXF,cAAAA,OAAO,EAACD,IAAI,CAACC,OAAL,CAAaE,QAFV;AAGXC,cAAAA,MAAM,EAACJ,IAAI,CAACI;AAHD,aADX;AAMA,YAAA,QAAQ,EAAE,KAAKf,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAaH,SAdD,MAcK;AACD,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAL,CAAP;AACH;AAEJ;AACA;;;;EAjCsBP,KAAK,CAACuB,S;;AAmC5B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAChC,SAAO;AAACP,IAAAA,IAAI,EAAGO,KAAK,CAACC;AAAd,GAAP;AACF,CAFD;;AAIA,eAAezB,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,QAAQ,EAARA,QAAD;AAAWC,EAAAA,QAAQ,EAARA,QAAX;AAAqBC,EAAAA,aAAa,EAAbA;AAArB,CAAlB,CAAP,CAA+DE,QAA/D,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { postList , editPost, getSinglepost } from '../actions';\nimport CreatePost from './CreatePost';\n\n\nclass EditPost extends React.Component {\n\n    componentWillMount() {\n        this.props.getSinglepost(this.props.match.params.id, (res)=>{});\n    }\n\n    onSubmit = (formValue) => {\n        this.props.editPost(this.props.match.params.id,formValue)\n        console.log('formVaalues', formValue);\n        this.props.history.push('/PostList')\n }\n\nrender() {   const {post} = this.props;\nif(this.props.post){\n    if(this.props.post.content){\n        return (\n            <div>\n                <h3>Edit a Post</h3>\n                <CreatePost \n            initialValues={{\n                title:post.title.rendered,\n                content:post.content.rendered,\n                status:post.status\n            }} \n                onSubmit={this.onSubmit}\n          />        \n            </div>\n         );  \n    }else{\n        return <div><h1>Loading...</h1></div>\n    }\n    \n}\n}\n}\n const mapStateToProps = (state) => {\n    return {post : state.FetchUser };\n };\n \n export default connect(mapStateToProps ,{postList ,editPost, getSinglepost })(EditPost);\n"]},"metadata":{},"sourceType":"module"}