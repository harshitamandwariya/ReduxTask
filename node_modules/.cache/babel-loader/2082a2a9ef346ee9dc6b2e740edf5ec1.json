{"ast":null,"code":"import _classCallCheck from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/demo/src/components/CreatePost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../actions';\nimport { Field, reduxForm } from 'redux-form';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderField = function (formValue) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: formValue.type\n      }, formValue.input, {\n        className: \"form-control is-danger\",\n        placeholder: formValue.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(\"font\", {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, formValue.meta.touched ? formValue.meta.error : ''));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"onSubmit\",\n    value: function onSubmit(formValue) {\n      this.props.createP();\n      console.log(formValue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const {handleSubmit} = this.props;\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Create Stream\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"Title\",\n        component: this.renderField,\n        type: \"text\",\n        placeholder: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"content\",\n        component: this.renderField,\n        type: \"textarea\",\n        placeholder: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Published by\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"status\",\n        component: this.renderField,\n        type: \"textarea\",\n        placeholder: \"Published by\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nexport default connect(null, {\n  createPost: createPost\n})(reduxForm({\n  form: 'CreatePost'\n})(CreatePost));","map":{"version":3,"sources":["/home/harshita/demo/src/components/CreatePost.js"],"names":["React","connect","createUser","Field","reduxForm","CreatePost","renderField","formValue","type","input","placeholder","meta","touched","error","props","createP","console","log","onSubmit","Component","createPost","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAAQC,KAAR,EAAcC,SAAd,QAA8B,YAA9B;;IAGMC,U;;;;;;;;;;;;;;;;;;UASFC,W,GAAc,UAACC,SAAD,EAAe;AACzB,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAEA,SAAS,CAACC;AAAvB,SACID,SAAS,CAACE,KADd;AAEA,QAAA,SAAS,EAAC,wBAFV;AAGA,QAAA,WAAW,EAAEF,SAAS,CAACG,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAKG;AAAM,QAAA,KAAK,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBH,SAAS,CAACI,IAAV,CAAeC,OAAf,GAAyBL,SAAS,CAACI,IAAV,CAAeE,KAAxC,GAAgD,EAAnE,CALH,CADA;AASC,K;;;;;;;6BAjBMN,S,EAAU;AAEjB,WAAKO,KAAL,CAAWC,OAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAEH;;;6BAcO;AACJ;AACA,aAEE;AAAM,QAAA,QAAQ,EAAI,KAAKW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAE,KAAKZ,WAFpB;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,WAAW,EAAC,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFJ,CAFN,EAaM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,SAAS,EAAE,KAAKA,WAFpB;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,WAAW,EAAC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFJ,CAbN,EAwBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAE,KAAKA,WAFpB;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,WAAW,EAAC,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFJ,CAxBN,EAmCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKY,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAnCN,CAFF;AA4CJ;;;;EAnEqBlB,KAAK,CAACmB,S;;AAwE/B,eAAelB,OAAO,CAAC,IAAD,EAAQ;AAACmB,EAAAA,UAAU,EAAVA;AAAD,CAAR,CAAP,CAA8BhB,SAAS,CAAC;AACnDiB,EAAAA,IAAI,EAAG;AAD4C,CAAD,CAAV,CAGxChB,UAHwC,CAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../actions';\nimport {Field,reduxForm} from 'redux-form';\n\n\nclass CreatePost extends React.Component  {\n     \n      onSubmit(formValue){\n       \n        this.props.createP(); \n        console.log(formValue); \n       \n    }\n\n    renderField = (formValue) => {\n        return (\n        <div>\n            <input type={formValue.type}\n            {...formValue.input} \n            className='form-control is-danger' \n            placeholder={formValue.placeholder} />\n           <font color='red'>{formValue.meta.touched ? formValue.meta.error : ''}</font>\n        </div>\n        )\n        }\n\n    render(){\n        //const {handleSubmit} = this.props;\n        return (\n        \n          <form onSubmit = {this.onSubmit}>\n                <h3>Create Stream</h3>\n                <div>\n                    <label>Title</label>\n                    <div>\n                    <Field\n                        name=\"Title\"\n                        component={this.renderField}\n                        type=\"text\"\n                        placeholder=\"Title\"                    \n                    />\n                    </div>\n                </div>\n                <div>\n                    <label>Description</label>\n                    <div>\n                    <Field\n                        name=\"content\"\n                        component={this.renderField}\n                        type=\"textarea\"\n                        placeholder=\"description\"                    \n                    />\n                    </div>\n                </div>\n                <div>\n                    <label>Published by</label>\n                    <div>\n                    <Field\n                        name=\"status\"\n                        component={this.renderField}\n                        type=\"textarea\"\n                        placeholder=\"Published by\"                    \n                    />\n                    </div>\n                </div>\n                <div>\n                    <button onClick={this.onSubmit}>\n                    Submit \n                    </button>\n                </div>\n          </form>      \n      );\n   }\n  }\n\n  \n\nexport default connect(null , {createPost})((reduxForm({\n    form : 'CreatePost'\n\n}))(CreatePost));\n"]},"metadata":{},"sourceType":"module"}