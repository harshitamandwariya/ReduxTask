{"ast":null,"code":"import _classCallCheck from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/ReactTask/ReduxTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/ReactTask/ReduxTask/src/components/EditPost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { postList, editPost } from '../actions';\nimport CreatePost from './CreatePost';\nimport history from './history';\n\nvar EditPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPost, _React$Component);\n\n  function EditPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValue) {\n      _this.props.editPost(_this.props.match.params.id, formValue);\n\n      _this.props.history.push('/PostList');\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.postList(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData() {\n      if (localStorage.getItem(\"token\") && this.props.match.params.id) {\n        console.log(this.props.match.params.id);\n\n        if (this.props.post === undefined) {\n          return history.push('/');\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"Update post\"), React.createElement(CreatePost, {\n            initialValues: {\n              title: this.props.post.title.rendered,\n              content: this.props.post.content.rendered,\n              status: this.props.post.status\n            },\n            onSubmit: this.onSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, history.push('/PostList'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.renderData());\n    }\n  }]);\n\n  return EditPost;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    post: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postList: postList,\n  editPost: editPost\n})(EditPost);","map":{"version":3,"sources":["/home/harshita/ReactTask/ReduxTask/src/components/EditPost.js"],"names":["React","connect","postList","editPost","CreatePost","history","EditPost","onSubmit","formValue","props","match","params","id","push","localStorage","getItem","console","log","post","undefined","title","rendered","content","status","renderData","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,EAAoBC,QAApB,QAAoC,YAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAMFC,Q,GAAW,UAACC,SAAD,EAAe;AACtB,YAAKC,KAAL,CAAWN,QAAX,CAAoB,MAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAA+CJ,SAA/C;;AACA,YAAKC,KAAL,CAAWJ,OAAX,CAAmBQ,IAAnB,CAAwB,WAAxB;AACN,K;;;;;;;wCARqB;AACjB,WAAKJ,KAAL,CAAWP,QAAX,CAAoB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C;AACH;;;iCAQU;AAEV,UAAGE,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,KAAKN,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5D,EAA+D;AAC5DI,QAAAA,OAAO,CAACC,GAAR,CAAa,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArC;;AAED,YAAI,KAAKH,KAAL,CAAWS,IAAX,KAAoBC,SAAxB,EAAoC;AAClC,iBACCd,OAAO,CAACQ,IAAR,CAAa,GAAb,CADD;AAGD,SAJD,MAIK;AAEL,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,UAAD;AACC,YAAA,aAAa,EACV;AAACO,cAAAA,KAAK,EAAC,KAAKX,KAAL,CAAWS,IAAX,CAAgBE,KAAhB,CAAsBC,QAA7B;AACAC,cAAAA,OAAO,EAAC,KAAKb,KAAL,CAAWS,IAAX,CAAgBI,OAAhB,CAAwBD,QADhC;AAEAE,cAAAA,MAAM,EAAC,KAAKd,KAAL,CAAWS,IAAX,CAAgBK;AAFvB,aAFJ;AAKK,YAAA,QAAQ,EAAE,KAAKhB,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAWC;AACD,OArBF,MAsBM;AACF,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCF,OAAO,CAACQ,IAAR,CAAa,WAAb,CADD,CADF;AAKD;AACJ;;;6BAEO;AACN,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKW,UAAL,EADL,CADL;AAKC;;;;EAlDmBxB,KAAK,CAACyB,S;;AAqD7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAOC,QAAP,EAAoB;AACzC,SAAO;AAACV,IAAAA,IAAI,EAAGS,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAR,GAAP;AACF,CAFD;;AAKA,eAAeX,OAAO,CAACyB,eAAD,EAAkB;AAACxB,EAAAA,QAAQ,EAARA,QAAD;AAAWC,EAAAA,QAAQ,EAARA;AAAX,CAAlB,CAAP,CAAgDG,QAAhD,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { postList , editPost } from '../actions';\nimport CreatePost from './CreatePost';\nimport history from './history';\n\n\nclass EditPost extends React.Component {\n   componentDidMount() {\n      this.props.postList(this.props.match.params.id);\n  }\n\n\n    onSubmit = (formValue) => {\n        this.props.editPost(this.props.match.params.id,formValue)   \n        this.props.history.push('/PostList')\n };\n\n renderData(){\n   \n   if(localStorage.getItem(\"token\") && this.props.match.params.id){\n      console.log( this.props.match.params.id);\n      \n     if((this.props.post === undefined) ){\n       return (\n        history.push('/')\n       )\n     }else{\n\n     return (\n       <div>\n         <h3>Update post</h3>\n         <CreatePost\n          initialValues={\n             {title:this.props.post.title.rendered,\n             content:this.props.post.content.rendered,\n             status:this.props.post.status}}\n              onSubmit={this.onSubmit} />\n       </div>      \n     )\n     }   \n    }\n     else{\n       return(\n         <div>\n         {history.push('/PostList')}\n         </div>\n       )\n     }\n }\n\nrender() {  \n   return(\n        <div>\n            {this.renderData()}\n        </div>\n     );  \n   }\n}\n\nconst mapStateToProps = (state,ownProps) => {\n   return {post : state.streams[ownProps.match.params.id] };\n};\n\n\nexport default connect(mapStateToProps ,{postList ,editPost })(EditPost);"]},"metadata":{},"sourceType":"module"}