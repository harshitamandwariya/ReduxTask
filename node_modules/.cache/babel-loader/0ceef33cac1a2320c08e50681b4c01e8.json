{"ast":null,"code":"import api from '../api/Post';\nimport { toastr } from 'react-redux-toastr';\nexport var createUser = function createUser(values, callback) {\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n  var response = api.post('/wp/v2/users/register', values, {\n    headers: headers\n  });\n  response.then(function (res) {\n    callback(res);\n    toastr.success('successfully signup');\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  return {\n    type: 'CREATE_USER',\n    payload: response\n  };\n};\nexport var loginUser = function loginUser(values, callback) {\n  var headers = {\n    'Content-Type': 'application/json'\n  };\n  var response = api.post('/jwt-auth/v1/token', values, {\n    headers: headers\n  });\n  response.then(function (res) {\n    callback(res);\n    console.log(res, 'hfsd');\n    toastr.success('successfully login');\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  return {\n    type: 'LOGIN_USER',\n    payload: response\n  };\n};\nexport var postList = function postList(callback) {\n  var response = api.get('/wp/v2/posts/');\n  response.then(function (res) {\n    callback(res);\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  return {\n    type: 'POST_LIST',\n    payload: response\n  };\n};\nexport var getSinglepost = function getSinglepost(id, callback) {\n  var response = api.get(\"/wp/v2/posts/\".concat(id));\n  response.then(function (res) {\n    callback(res);\n  });\n  response.catch(function (error) {\n    toastr.error('invalid user');\n  });\n  response.then(function (res) {\n    return {\n      type: 'SINGLE_POST',\n      payload: res.data\n    };\n  });\n};\nexport function getOrganisationMember(id, callback) {\n  var request = axios.get(\"\".concat(process.env.REACT_APP_API_URL, \"users?organisationId=\").concat(id));\n  return function (dispatch) {\n    request.then(function (response) {\n      dispatch({\n        type: GET_ORGANISATION_MEMBER,\n        payload: response.data\n      });\n      callback(response);\n    }).catch(function (error) {\n      callback(error.response);\n      apiErrors(error);\n    });\n  };\n}\nexport var createPost = function createPost(values, callback) {\n  return function () {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n    };\n    var response = api.post('/wp/v2/posts/', values, {\n      headers: headers\n    });\n    response.then(function (res) {\n      callback(res);\n      toastr.success('you created a new post');\n    });\n    response.catch(function (error) {\n      callback(error.response);\n      toastr.error('invalid user');\n    });\n    return {\n      type: 'CREATE_POST',\n      payload: response\n    };\n  };\n};\nexport var editPost = function editPost(id, values) {\n  var headers = {\n    'Content-Type': 'application/json',\n    'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n  };\n  var response = api.put(\"/wp/v2/posts/\".concat(id), values, {\n    headers: headers\n  });\n  response.then(function (res) {\n    toastr.success('you Edited a post');\n    return res;\n  });\n  response.catch(function (error) {\n    toastr.warning('something went wrong');\n  });\n  return {\n    type: 'EDIT_POST',\n    payload: response\n  };\n};\nexport var deletePost = function deletePost(id, callback) {\n  return function () {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \".concat(localStorage.getItem(\"token\"))\n    };\n    var response = api.delete(\"/wp/v2/posts/\".concat(id), {\n      headers: headers\n    });\n    response.then(function (res) {\n      callback(res);\n      toastr.success('you deleted a post');\n    });\n    response.catch(function (error) {\n      toastr.error('can\\'t delete post');\n    });\n  };\n};","map":{"version":3,"sources":["/home/harshita/ReactTask/ReduxTask/src/actions/index.js"],"names":["api","toastr","createUser","values","callback","headers","response","post","then","res","success","catch","error","type","payload","loginUser","console","log","postList","get","getSinglepost","id","data","getOrganisationMember","request","axios","process","env","REACT_APP_API_URL","dispatch","GET_ORGANISATION_MEMBER","apiErrors","createPost","localStorage","getItem","editPost","put","warning","deletePost","delete"],"mappings":"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","sourcesContent":["import api from '../api/Post';\nimport {\n  toastr\n} from 'react-redux-toastr'\n\n\nexport const createUser = (values, callback) => {\n  const headers = {\n    'Content-Type': 'application/json',\n  }\n\n  const response = api.post('/wp/v2/users/register', values, {\n    headers: headers\n  });\n  response.then((res) => {\n    callback(res);\n\n    toastr.success('successfully signup')\n  })\n  response.catch((error) => {\n    toastr.error('invalid user');\n  })\n  return {\n    type: 'CREATE_USER',\n    payload: response\n  };\n}\n\n\n\nexport const loginUser = (values, callback) => {\n  const headers = {\n    'Content-Type': 'application/json',\n  }\n  const response = api.post('/jwt-auth/v1/token', values, {\n    headers: headers\n  });\n  response.then((res) => {\n    callback(res);\n    console.log(res, 'hfsd');\n\n    toastr.success('successfully login')\n  })\n  response.catch((error) => {\n    toastr.error('invalid user');\n  })\n\n  return {\n    type: 'LOGIN_USER',\n    payload: response\n  };\n}\n\n\nexport const postList = (callback) => {\n  const response = api.get('/wp/v2/posts/');\n  response.then((res) => {\n    callback(res);\n  });\n  response.catch((error) => {\n    toastr.error('invalid user');\n  })\n  return {\n    type: 'POST_LIST',\n    payload: response\n  };\n}\n\nexport const getSinglepost = (id, callback) => {\n  const response = api.get(`/wp/v2/posts/${id}`);\n  response.then((res) => {\n    callback(res);\n  });\n  response.catch((error) => {\n    toastr.error('invalid user');\n  })\n  response.then((res) => {\n    return {\n      type: 'SINGLE_POST',\n      payload: res.data\n    };\n  })\n\n}\n\nexport function getOrganisationMember(id, callback) {\n  const request = axios.get(`${process.env.REACT_APP_API_URL}users?organisationId=${id}`);\n  return (dispatch) => {\n      request.then((response) => {\n          dispatch({\n              type: GET_ORGANISATION_MEMBER,\n              payload: response.data\n          })\n          callback(response)\n      })\n          .catch((error) => {\n              callback(error.response)\n              apiErrors(error)\n          });\n  }\n}\n\nexport const createPost = (values, callback) => () => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n  }\n  const response = api.post('/wp/v2/posts/', values, {\n    headers: headers\n  });\n\n  response.then((res) => {\n    callback(res);\n    toastr.success('you created a new post')\n  })\n  response.catch((error) => {\n    callback(error.response);\n    toastr.error('invalid user');\n  })\n  return {\n    type: 'CREATE_POST',\n    payload: response\n  };\n}\n\n\n\nexport const editPost = (id, values) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n  }\n  const response = api.put(`/wp/v2/posts/${id}`, values, {\n    headers: headers\n  });\n  response.then((res) => {\n    toastr.success('you Edited a post')\n    return res;\n  })\n  response.catch((error) => {\n    toastr.warning('something went wrong');\n  })\n  return {\n    type: 'EDIT_POST',\n    payload: response\n  };\n}\n\n\n\nexport const deletePost = (id, callback) => () => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n  }\n\n  const response = api.delete(`/wp/v2/posts/${id}`, {\n    headers: headers\n  });\n  response.then((res) => {\n    callback(res);\n    toastr.success('you deleted a post')\n  });\n  response.catch((error) => {\n    toastr.error('can\\'t delete post');\n  });\n}"]},"metadata":{},"sourceType":"module"}