{"ast":null,"code":"import _classCallCheck from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/demo/src/components/SignUpForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { createUser } from '../actions/index';\nimport { connect } from \"react-redux\"; // import {Link} from 'react-router-dom';\n\nvar SignUpForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUpForm, _React$Component);\n\n  function SignUpForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUpForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUpForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues); // this.props.createUser(values); \n    };\n\n    _this.renderInput = function (formValue) {\n      console.log(formValue, 'dfjsjdhflsdhf');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: formValue.type\n      }, formValue.input, {\n        className: \"form-control is-danger\",\n        placeholder: formValue.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"font\", {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, formValue.meta.touched ? formValue.meta.error : ''));\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUpForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"ui form error\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"first_name\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"last_name\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"UserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"ConfirmPassword\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"ConfirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Submit\")) //---------------------------------------------------------------------------------------------------    \n      //   <form onSubmit = {this.props.handleSubmit(this.onSubmit)}>\n      //         <h1>SignUp</h1>\n      //         <div>\n      //             <label>First Name</label>\n      //             <div>\n      //             <Field\n      //                 name=\"firstName\"\n      //                 component={this.renderField}\n      //                 type=\"text\"\n      //                 placeholder=\"First Name\"                    \n      //             />\n      //             </div>\n      //         </div>\n      //         <div>\n      //             <label>Last Name</label>\n      //             <div>\n      //             <Field\n      //                 name=\"lastName\"\n      //                 component={this.renderField}\n      //                 type=\"text\"\n      //                 placeholder=\"Last Name\"\n      //             />\n      //             </div>\n      //         </div>  \n      //         <div>\n      //             <label>Email</label>\n      //             <div>\n      //             <Field\n      //                 name=\"email\"\n      //                 component={this.renderField}\n      //                 type=\"email\"\n      //                 placeholder=\"Email\"\n      //             />\n      //             </div>\n      //         </div>\n      //         <div>\n      //             <label>UserName</label>\n      //             <div>\n      //             <Field\n      //                 name=\"UserName\"\n      //                 component={this.renderField}\n      //                 type=\"UserName\"\n      //                 placeholder=\"UserName\"\n      //             />\n      //             </div>\n      //         </div>\n      //         <div>\n      //             <label>PassWord</label>\n      //             <div>\n      //             <Field\n      //                 name=\"PassWord\"\n      //                 component={this.renderField}\n      //                 type=\"PassWord\"\n      //                 placeholder=\"PassWord\"\n      //             />\n      //             </div>\n      //         </div>\n      //         <div>\n      //             <label>ConfirmPassWord</label>\n      //             <div>\n      //             <Field\n      //                 name=\"ConfirmPassWord\"\n      //                 component={this.renderField}\n      //                 type=\"PassWord\"\n      //                 placeholder=\"re-enter PassWord\"\n      //             />\n      //             </div>\n      //         </div>\n      //         <div>\n      //             <button onClick={this.onSubmit}>\n      //             Submit \n      //             </button>\n      //             <Link to=\"/Login\" className=\"ui button primary\">\n      //                 back to Login   \n      //             </Link>\n      //         </div>\n      //     </form>\n      ;\n    }\n  }]);\n\n  return SignUpForm;\n}(React.Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n  console.log(values.firstName);\n\n  if (!values.firstName) {\n    errors.firstName = 'you must enter a firstName';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = \"you must enter less than 15 letters\";\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'you must enter a lastName';\n  } else if (values.lastName.length > 15) {\n    errors.lastName = \"you must enter less than 15 letters\";\n  }\n\n  if (!values.email) {\n    errors.email = 'you must enter an Email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.UserName) {\n    errors.UserName = 'you must enter an UserName';\n  } else if (values.UserName.length > 20) {\n    errors.UserName = \"you must enter less than 20 letters\";\n  }\n\n  if (!values.PassWord) {\n    errors.PassWord = 'you must enter a strong PassWord';\n  } else if (values.PassWord.length < 6) {\n    errors.PassWord = \"you must enter password of atleast 6 letters\";\n  }\n\n  if (!values.ConfirmPassWord) {\n    errors.ConfirmPassWord = 'you must re-enter PassWord';\n  }\n\n  return errors;\n};\n\nexport default connect(null, {\n  createUser: createUser\n})(reduxForm({\n  form: 'SignUpForm',\n  validate: validate\n})(SignUpForm));","map":{"version":3,"sources":["/home/harshita/demo/src/components/SignUpForm.js"],"names":["React","Field","reduxForm","createUser","connect","SignUpForm","onSubmit","formValues","console","log","renderInput","formValue","type","input","placeholder","meta","touched","error","props","handleSubmit","Component","validate","values","errors","firstName","length","lastName","email","test","UserName","PassWord","ConfirmPassWord","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field,reduxForm} from 'redux-form';\nimport {createUser} from '../actions/index';\nimport { connect } from \"react-redux\";\n\n// import {Link} from 'react-router-dom';\n\nclass SignUpForm extends React.Component{\n    \n    onSubmit=(formValues)=>{\n        \n        console.log(formValues);\n       // this.props.createUser(values); \n         \n       \n    }\n\n    renderInput = (formValue) => {\n        console.log(formValue,'dfjsjdhflsdhf');\n        return (\n        <div>\n            <input type={formValue.type}\n            {...formValue.input} \n            className='form-control is-danger' \n            placeholder={formValue.placeholder} />\n           <font color='red'>{formValue.meta.touched ? formValue.meta.error : ''}</font>\n        </div>\n        )\n        }\n\n    render(){\n      \n        return(\n        \n        <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"first_name\" type=\"text\" component={this.renderInput} label=\"First Name\"/>\n        <Field name=\"last_name\" type=\"text\" component={this.renderInput} label=\"Last Name\" />\n        <Field name=\"email\" type=\"text\" component={this.renderInput} label=\"E-mail\"/>\n        <Field name=\"username\" type=\"text\" component={this.renderInput} label=\"UserName\"  />\n        <Field name=\"password\" type=\"password\" component={this.renderInput} label=\"Password\"/>\n        <Field name=\"ConfirmPassword\" type=\"password\" component={this.renderInput} label=\"ConfirmPassword\"/>\n        <button className=\"ui button primary\">Submit</button>\n\n             </form>\n\n\n\n\n        //---------------------------------------------------------------------------------------------------    \n        //   <form onSubmit = {this.props.handleSubmit(this.onSubmit)}>\n        //         <h1>SignUp</h1>\n        //         <div>\n        //             <label>First Name</label>\n        //             <div>\n        //             <Field\n        //                 name=\"firstName\"\n        //                 component={this.renderField}\n        //                 type=\"text\"\n        //                 placeholder=\"First Name\"                    \n        //             />\n        //             </div>\n        //         </div>\n        //         <div>\n        //             <label>Last Name</label>\n        //             <div>\n        //             <Field\n        //                 name=\"lastName\"\n        //                 component={this.renderField}\n        //                 type=\"text\"\n        //                 placeholder=\"Last Name\"\n        //             />\n        //             </div>\n        //         </div>  \n        //         <div>\n        //             <label>Email</label>\n        //             <div>\n        //             <Field\n        //                 name=\"email\"\n        //                 component={this.renderField}\n        //                 type=\"email\"\n        //                 placeholder=\"Email\"\n        //             />\n        //             </div>\n        //         </div>\n        //         <div>\n        //             <label>UserName</label>\n        //             <div>\n        //             <Field\n        //                 name=\"UserName\"\n        //                 component={this.renderField}\n        //                 type=\"UserName\"\n        //                 placeholder=\"UserName\"\n        //             />\n        //             </div>\n        //         </div>\n        //         <div>\n        //             <label>PassWord</label>\n        //             <div>\n        //             <Field\n        //                 name=\"PassWord\"\n        //                 component={this.renderField}\n        //                 type=\"PassWord\"\n        //                 placeholder=\"PassWord\"\n        //             />\n        //             </div>\n        //         </div>\n        //         <div>\n        //             <label>ConfirmPassWord</label>\n        //             <div>\n        //             <Field\n        //                 name=\"ConfirmPassWord\"\n        //                 component={this.renderField}\n        //                 type=\"PassWord\"\n        //                 placeholder=\"re-enter PassWord\"\n        //             />\n        //             </div>\n        //         </div>\n        //         <div>\n        //             <button onClick={this.onSubmit}>\n        //             Submit \n        //             </button>\n        //             <Link to=\"/Login\" className=\"ui button primary\">\n        //                 back to Login   \n        //             </Link>\n        //         </div>\n        //     </form>\n\n        );\n    }\n}\n\nconst  validate = (values) => {\n    const errors = {}\n    \nconsole.log(values.firstName)\n     if(!values.firstName) {\n        errors.firstName='you must enter a firstName';\n    } else if(values.firstName.length > 15){\n        errors.firstName=\"you must enter less than 15 letters\"\n    }\n\n     if(!values.lastName){\n        errors.lastName='you must enter a lastName';\n     }else if(values.lastName.length > 15){\n        errors.lastName=\"you must enter less than 15 letters\"\n    }\n\n     if (!values.email) {\n        errors.email = 'you must enter an Email'\n     }else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n  \n    if(!values.UserName) {\n        errors.UserName='you must enter an UserName';\n    }else if(values.UserName.length > 20){\n        errors.UserName=\"you must enter less than 20 letters\"\n    }\n\n    if(!values.PassWord) {\n       errors.PassWord='you must enter a strong PassWord';\n    }else if(values.PassWord.length < 6){\n        errors.PassWord=\"you must enter password of atleast 6 letters\"\n    }\n\n    if(!values.ConfirmPassWord) {\n        errors.ConfirmPassWord='you must re-enter PassWord';\n    }\n   return errors;                            \n\n}\n\n\n\nexport default connect(null ,{createUser})(reduxForm({\n    form :'SignUpForm',\n    validate\n }) (SignUpForm))\n"]},"metadata":{},"sourceType":"module"}