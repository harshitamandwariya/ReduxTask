{"ast":null,"code":"import _classCallCheck from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harshita/demo-old/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harshita/demo-old/src/components/CreatePost.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\nimport { Field, reduxForm } from 'redux-form';\nimport history from './history';\nimport { Link } from 'react-router-dom';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValue) {\n      _this.props.createPost(formValue, function (res) {\n        console.log(res, 'function');\n\n        if (!res.status === 200) {\n          history.push('/');\n        }\n\n        if (res.status === 201) {\n          history.push('/PostList');\n        }\n      });\n    };\n\n    _this.renderField = function (formValue) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        type: formValue.type\n      }, formValue.input, {\n        className: \"form-control is-danger\",\n        placeholder: formValue.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), \" \", React.createElement(\"font\", {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" \", formValue.meta.touched ? formValue.meta.error : '', \" \"), \" \");\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"onSubmitLogout\",\n    value: function onSubmitLogout() {\n      localStorage.removeItem(\"user_id\");\n      localStorage.removeItem(\"token\");\n      history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onSubmitHelper = this.onSubmit;\n\n      if (this.props.onSubmit) {\n        onSubmitHelper = this.props.onSubmit;\n      }\n\n      if (localStorage.getItem('token')) {\n        return React.createElement(\"form\", {\n          onSubmit: this.props.handleSubmit(onSubmitHelper),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \" Create Post \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \" title \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"title\",\n          component: this.renderField,\n          type: \"text\",\n          placeholder: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), \" \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \" description \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"content\",\n          component: this.renderField,\n          type: \"text\",\n          placeholder: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })), \" \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \" status \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"status\",\n          component: \"select\",\n          type: \"text\",\n          placeholder: \"Publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          className: \"form-control is-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }), React.createElement(\"option\", {\n          value: \"publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \" publish \"), \" \", React.createElement(\"option\", {\n          value: \"future\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \" future \"), \" \", React.createElement(\"option\", {\n          value: \"draft\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \" draft \"), \"      \", React.createElement(\"option\", {\n          value: \"private\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \" private \"), \"  \", React.createElement(\"option\", {\n          value: \"pending\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" pending \"), \"               \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \" Submit \"), \" \", React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \" \", React.createElement(\"button\", {\n          className: \"ui button primary\",\n          onClick: this.onSubmitLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \" Logout \"))), \" \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \" \", history.push('/'), \" \");\n      }\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(formValue) {\n  var errors = {};\n\n  if (!formValue.title) {\n    errors.title = 'you must enter a title';\n  } else if (formValue.title.length > 15) {\n    errors.title = \"you must enter less than 15 letters\";\n  }\n\n  if (!formValue.content) {\n    errors.content = 'you must enter a description';\n  } else if (formValue.content.length > 200) {\n    errors.content = \"you must enter less than 200 letters\";\n  }\n\n  if (!formValue.status) {\n    errors.status = 'you must enter a status';\n  }\n\n  return errors;\n};\n\nexport default connect(null, {\n  createPost: createPost\n})(reduxForm({\n  form: 'CreatePost',\n  validate: validate\n})(CreatePost));","map":{"version":3,"sources":["/home/harshita/demo-old/src/components/CreatePost.js"],"names":["React","connect","createPost","Field","reduxForm","history","Link","CreatePost","onSubmit","formValue","props","res","console","log","status","push","renderField","type","input","placeholder","meta","touched","error","localStorage","removeItem","onSubmitHelper","getItem","handleSubmit","onSubmitLogout","Component","validate","errors","title","length","content","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    connect\n} from 'react-redux';\nimport {\n    createPost\n} from '../actions';\nimport {\n    Field,\n    reduxForm\n} from 'redux-form';\nimport history from './history';\nimport {\n    Link\n} from 'react-router-dom';\n\n\n\nclass CreatePost extends React.Component {\n\n    onSubmit = (formValue) => {\n\n        this.props.createPost(formValue, (res) => {\n            console.log(res, 'function')\n            if (!res.status === 200) {\n                history.push('/')\n            }\n            if (res.status === 201) {\n                history.push('/PostList');\n            }\n        });\n    }\n\n    onSubmitLogout() {\n        localStorage.removeItem(\"user_id\");\n        localStorage.removeItem(\"token\");\n        history.push('/');\n    }\n\n\n    renderField = (formValue) => {\n        return ( <\n            div >\n            <\n            input type = {\n                formValue.type\n            } {\n                ...formValue.input\n            }\n            className = 'form-control is-danger'\n            placeholder = {\n                formValue.placeholder\n            }\n            /> <\n            font color = 'red' > {\n                formValue.meta.touched ? formValue.meta.error : ''\n            } < /font> <\n            /div>\n        )\n    }\n\n    render() {\n        let onSubmitHelper = this.onSubmit;\n        if (this.props.onSubmit) {\n            onSubmitHelper = this.props.onSubmit\n        }\n        if (localStorage.getItem('token')) {\n            return (\n\n                <\n                form onSubmit = {\n                    this.props.handleSubmit(onSubmitHelper)\n                } >\n                <\n                h3 > Create Post < /h3> <\n                div >\n                <\n                label > title < /label> <\n                div >\n                <\n                Field name = \"title\"\n                component = {\n                    this.renderField\n                }\n                type = \"text\"\n                placeholder = \"title\" /\n                >\n                <\n                /div> <\n                /div> <\n                div >\n                <\n                label > description < /label> <\n                div >\n                <\n                Field name = \"content\"\n                component = {\n                    this.renderField\n                }\n                type = \"text\"\n                placeholder = \"description\" /\n                >\n                <\n                /div> <\n                /div> <\n                div >\n                <\n                label > status < /label> <\n                div >\n                <\n                Field name = \"status\"\n                component = \"select\"\n                type = \"text\"\n                placeholder = \"Publish\" >\n                <\n                option className = 'form-control is-danger' / >\n                <\n                option value = \"publish\" > publish < /option> <\n                option value = \"future\" > future < /option> <\n                option value = \"draft\" > draft < /option>      <\n                option value = \"private\" > private < /option>  <\n                option value = \"pending\" > pending < /option>               <\n                /Field> <\n                /div> <\n                /div> <\n                div >\n                <\n                button type = 'submit'\n                className = \"ui button primary\" > Submit < /button> <\n                Link to = '/' > < button className = \"ui button primary\"\n                onClick = {\n                    this.onSubmitLogout\n                } > Logout < /button></Link >\n\n                <\n                /div> <\n                /form>      \n            );\n        } else {\n            return ( <\n                div > {\n                    history.push('/')\n                } < /div>\n            )\n        }\n\n    }\n}\nconst validate = (formValue) => {\n    const errors = {};\n    if (!formValue.title) {\n        errors.title = 'you must enter a title';\n    } else if (formValue.title.length > 15) {\n        errors.title = \"you must enter less than 15 letters\"\n    }\n\n    if (!formValue.content) {\n        errors.content = 'you must enter a description';\n    } else if (formValue.content.length > 200) {\n        errors.content = \"you must enter less than 200 letters\"\n    }\n\n    if (!formValue.status) {\n        errors.status = 'you must enter a status';\n    }\n    return errors;\n}\n\n\nexport default connect(null, {\n    createPost\n})((reduxForm({\n    form: 'CreatePost',\n    validate\n\n}))(CreatePost));"]},"metadata":{},"sourceType":"module"}